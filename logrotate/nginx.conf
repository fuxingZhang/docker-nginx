
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '{ "@timestamp": "$time_iso8601", '
        '"remote_addr": "$remote_addr", '
        '"body_bytes_sent": "$body_bytes_sent", '
        '"request_time": $request_time, '
        '"status": "$status", '
        '"host": "$host", '
        '"request": "$request", '
        '"request_method": "$request_method", '
        '"path": "$uri", '
        '"http_referrer": "$http_referer", '
        '"body_bytes_sent":"$body_bytes_sent", '
        '"http_x_forwarded_for": "$http_x_forwarded_for", '
        '"http_user_agent": "$http_user_agent" '
    '}';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

	upstream nodejs {
        server 127.0.0.1:7001;
    }

    # include /etc/nginx/conf.d/*.conf;
    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;
        #access_log  /var/log/nginx/host.access.log  main;

        location / {
            root   /usr/share/nginx/static;
            index  index.html index.htm;
            access_log off;
        }

        location /static/ {
            alias  /usr/share/nginx/static/;
            access_log off;
        }

        location /api/v1 {
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Real-PORT $remote_port;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            add_header backendIP $upstream_addr;
            add_header backendCode $upstream_status;
            proxy_pass http://nodejs/api/v1;
	  	}

        location /socket.io {
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_pass http://nodejs/socket.io;
            access_log off;
	  	}

        #error_page  404              /404.html;

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}
